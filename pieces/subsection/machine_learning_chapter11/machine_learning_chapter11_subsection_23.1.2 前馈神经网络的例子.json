[
    {
        "strategy": "subsection",
        "source": "machine_learning_chapter11",
        "title": "23.1.2 前馈神经网络的例子",
        "content_length": 4120,
        "content": "Title: 23.1.2 前馈神经网络的例子\nContent:\n例 23.2 图 23.8 是一个二层前馈神经网络, 画出其函数的三维图形, 其中第一层激活函数和第二层激活函数都是 $\\mathrm{S}$ 型函数。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-05}\n\\end{center}\n\n图 23.8 二层前馈神经网络例\n\n解 第一层 (隐层) 的第一个神经元与例 23.1 相同, 仿射函数是 $z=-x_{1}+2 x_{2}+1$, 激活函数是 $a(z)=\\frac{1}{1+\\mathrm{e}^{-z}}$, 神经元函数是\n\n$$\nh_{1}^{(1)}=\\frac{1}{1+\\mathrm{e}^{x_{1}-2 x_{2}-1}}\n$$\n\n图 23.3 是该神经元的三维图形。第一层的第二个神经元的仿射函数是 $z=-4 x_{1}-x_{2}+2$,激活函数是 $a(z)=\\frac{1}{1+\\mathrm{e}^{-z}}$, 神经元函数是\n\n$$\nh_{2}^{(1)}=\\frac{1}{1+\\mathrm{e}^{4 x_{1}+x_{2}-2}}\n$$\n\n图 23.9 是该神经元的三维图形。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-05(1)}\n\\end{center}\n\n图 23.9 神经元的三维图形 (见文前彩图)\n\n第二层 (输出层) 的神经元的仿射函数是 $z=h_{1}^{(1)}+h_{2}^{(1)}$, 激活函数是 $g(z)=\\sigma(z)$, 神经元函数是 $f\\left(x_{1}, x_{2}\\right)=\\sigma\\left(h_{1}^{(1)}+h_{2}^{(1)}\\right)$ 。神经网络整体\n\n$$\nf\\left(x_{1}, x_{2}\\right)=\\sigma\\left(\\frac{1}{1+\\mathrm{e}^{x_{1}-2 x_{2}-1}}+\\frac{1}{1+\\mathrm{e}^{4 x_{1}+x_{2}-2}}\\right)\n$$\n\n是一个二类分类模型。图 23.10 是神经网络的三维图形。图形中 “高原” 部分的输出值接近\n\n1 , “盆地” 部分的输出值接近 0 。可以看出, 整个二层前馈神经网络能够比第一层的两个神经元表示更复杂的非线性关系。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-06(1)}\n\\end{center}\n\n图 23.10 前馈神经网络例的三维图形 (见文前彩图)\n\n例 23.3 构建一个前馈神经网络实现逻辑表达式 XOR 的功能。\n\n解 采用矩阵表示, 构建一个二层前馈神经网络, 第一层有两个神经元, 其激活函数是整流线性函数, 第二层有一个神经元, 其激活函数是恒等函数, 如图 23.11 所示。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-06}\n\\end{center}\n\n图 $23.11 \\mathrm{XOR}$ 神经网络例\n\n第一层的权重矩阵和偏置向量是\n\n$$\n\\begin{aligned}\n\\boldsymbol{W}^{(1)} & =\\left[\\begin{array}{ll}\n1 & 1 \\\\\n1 & 1\n\\end{array}\\right] \\\\\n\\boldsymbol{b}^{(1)} & =\\left[\\begin{array}{r}\n0 \\\\\n-1\n\\end{array}\\right]\n\\end{aligned}\n$$\n\n第二层的权重矩阵和偏置向量是\n\n$$\n\\begin{gathered}\n\\boldsymbol{W}^{(2)}=\\left[\\begin{array}{r}\n1 \\\\\n-2\n\\end{array}\\right] \\\\\n\\boldsymbol{b}^{(2)}=[0]\n\\end{gathered}\n$$\n\n用矩阵表示四种可能的输入:\n\n$$\n\\boldsymbol{X}=\\left[\\begin{array}{llll}\n0 & 0 & 1 & 1 \\\\\n0 & 1 & 0 & 1\n\\end{array}\\right]\n$$\n\n代表批量处理。代入神经网络, 第一层输出是\n\n$$\n\\begin{aligned}\n\\boldsymbol{H}^{(1)} & =\\operatorname{relu}\\left(\\boldsymbol{W}^{(1)^{\\mathrm{T}}} \\boldsymbol{X}+\\boldsymbol{B}^{(1)}\\right) \\\\\n& =\\operatorname{relu}\\left(\\left[\\begin{array}{ll}\n1 & 1 \\\\\n1 & 1\n\\end{array}\\right]\\left[\\begin{array}{llll}\n0 & 0 & 1 & 1 \\\\\n0 & 1 & 0 & 1\n\\end{array}\\right]+\\left[\\begin{array}{rrrr}\n0 & 0 & 0 & 0 \\\\\n-1 & -1 & -1 & -1\n\\end{array}\\right]\\right) \\\\\n& =\\operatorname{relu}\\left(\\left[\\begin{array}{llll}\n0 & 1 & 1 & 2 \\\\\n-1 & 0 & 0 & 1\n\\end{array}\\right]\\right) \\\\\n& =\\left[\\begin{array}{llll}\n0 & 1 & 1 & 2 \\\\\n0 & 0 & 0 & 1\n\\end{array}\\right]\n\\end{aligned}\n$$\n\n其中 relu 计算对矩阵的每一个元素进行。第二层输出是\n\n$$\n\\begin{aligned}\n\\boldsymbol{H}^{(2)} & =\\boldsymbol{W}^{(2)^{\\mathrm{T}}} \\boldsymbol{H}^{(1)}+\\boldsymbol{B}^{(2)} \\\\\n& =\\left[\\begin{array}{cc}\n1 & -2\n\\end{array}\\right]\\left[\\begin{array}{llll}\n0 & 1 & 1 & 2 \\\\\n0 & 0 & 0 & 1\n\\end{array}\\right]+\\left[\\begin{array}{llll}\n0 & 0 & 0 & 0\n\\end{array}\\right] \\\\\n& =\\left[\\begin{array}{llll}\n0 & 1 & 1 & 0\n\\end{array}\\right]\n\\end{aligned}\n$$\n\n表示四种可能的输出。可以看出这个二层神经网络实现了 XOR 功能。图 23.12 是 XOR 神经网络函数的三维图形。作为线性模型的感知机不能实现 XOR 是众所周知的事实, 而作为\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-07}\n\\end{center}\n\n图 $23.12 \\mathrm{XOR}$ 神经网络例的三维图形 (见文前彩图)\\\\\n非线性模型的前馈神经网络可以实现 XOR, 并且以很简单的方式实现。\n\n例 23.4 手写数字识别网络。\n\nMNIST 是一个机器学习标准数据集。每一个样本由一个像素为 $28 \\times 28$ 的手写数字灰度图像以及对应的 $0 \\sim 9$ 之间的标签组成, 像素取值为 $0 \\sim 255$, 如图 23.13 所示。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-08}\n\\end{center}\n\n图 23.13 MNIST 手写数字数据例\n\n可以构建图 23.14 所示的前馈神经网络对 MNIST 的手写数字进行识别, 是一个多标签分类模型。输入层是一个 $28 \\times 28=784$ 维向量, 取自一个图像, 每一维对应一个像素。第一层和第二层是隐层, 各自有 100 个神经元和 50 个神经元, 其激活函数都是 $\\mathrm{S}$ 型函数。第三层是输出层, 有 10 个神经元, 其激活函数也是 $\\mathrm{S}$ 型函数。给定一个图像, 神经网络可以计算出其属于 $0 \\sim 9$ 类的概率, 将图像赋子概率最大的标签。分类准确率能达到 $90 \\%$ 以上。\n\n\\begin{center}\n\\includegraphics[max width=\\textwidth]{2024_03_13_90c63935c3d97d7235e0g-08(1)}\n\\end{center}\n\n图 23.14 手写数字识别网络\n\n从以上的例子可以看出, 前馈神经网络拥有很强的语义表示能力, 简单的网络就可以表示逻辑关系、抽象数字, 进行简单逻辑推理、数字识别等处理。预测时, 神经网络的每一层通过非线性变换对输入进行特征转换, 多次这样的特征转换产生最终的判断结果。"
    },
    {
        "id": "chatcmpl-93z7HahNbzOmCgw1RaJjwImAjEyfi",
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "logprobs": null,
                "message": {
                    "content": "{\n    \"问题1\": \"前馈神经网络中的激活函数有哪些？\",\n    \"回答1\": \"前馈神经网络中的激活函数包括 $\\text{S}$ 型函数、整流线性函数和恒等函数。这些激活函数在神经元的仿射函数后进行非线性变换，从而引入非线性特性。\",\n    \"问题2\": \"二层前馈神经网络的函数是如何表示的？\",\n    \"回答2\": \"二层前馈神经网络的函数表示为 $f\\big(x_{1}, x_{2}\\big)=\\text{sigmoid}\\big(h_{1}^{(1)}+h_{2}^{(1)}\\big)$，其中 $h_{1}^{(1)}$ 和 $h_{2}^{(1)}$ 分别是第一层的两个神经元的输出，通过 $\\text{sigmoid}$ 函数进行非线性变换后相加得到输出。\",\n    \"问题3\": \"前馈神经网络如何实现逻辑表达式 XOR 的功能？\",\n    \"回答3\": \"通过构建一个二层前馈神经网络，第一层有两个神经元，其激活函数是整流线性函数；第二层有一个神经元，其激活函数是恒等函数。通过适当设置权重矩阵和偏置向量，并经过非线性变换，可以实现 XOR 功能。\",\n    \"问题4\": \"前馈神经网络在手写数字识别中的作用是什么？\",\n    \"回答4\": \"前馈神经网络在手写数字识别中用于对输入的手写数字图像进行特征提取和抽象表示，通过多层非线性变换产生最终的分类结果。通过适当设计隐层和输出层的神经元数量和激活函数，可以实现对手写数字的准确识别。\",\n    \"问题5\": \"MNIST 数据集是什么样的数据集？\",\n    \"回答5\": \"MNIST 是一个机器学习标准数据集，每一个样本由一个像素为 $28 \\times 28$ 的手写数字灰度图像以及对应的 $0 \\text{ 至 } 9$ 之间的标签组成。该数据集被广泛用于测试机器学习算法在手写数字识别上的性能。\",\n    \"问题6\": \"前馈神经网络在 MNIST 手写数字识别中起到了什么作用？\",\n    \"回答6\": \"前馈神经网络在 MNIST 手写数字识别中起到了特征提取和抽象表示的作用。通过多层非线性变换，可以将输入的手写数字图像转化为对应 $0 \\text{ 至 } 9$ 类别的概率分布，从而实现对手写数字的准确识别。\",\n    \"问题7\": \"前馈神经网络具有什么样的语义表示能力？\",\n    \"回答7\": \"前馈神经网络具有很强的语义表示能力，简单的网络就可以表示逻辑关系、抽象数字，进行简单逻辑推理、数字识别等处理。通过多次非线性特征转换，可以产生最终的判断结果。\",\n    \"问题8\": \"为什么需要使用多层非线性变换来处理手写数字识别任务？\",\n    \"回答8\": \"手写数字识别任务需要对输入的复杂图像进行特征提取和抽象表示，并实现对不同类别的准确分类。多层非线性变换能够帮助神经网络更好地捕捉图像中的抽象特征，并实现更复杂的分类决策边界。\",\n    \"问题9\": \"如何构建一个二层前馈神经网络实现逻辑表达式 XOR 的功能？\",\n    \"回答9\": \"构建一个二层前馈神经网络实现逻辑表达式 XOR 的功能需要设置第一层有两个神经元，其激活函数是整流线性函数；第二层有一个神经元，其激活函数是恒等函数。同时需要适当设置权重矩阵和偏置向量，以及进行适当的非线性变换。\",\n    \"问题10\": \"为什么前馈神经网络能够比感知机更好地处理 XOR 问题？\",\n    \"回答10\": \"前馈神经网络能够比感知机更好地处理 XOR 问题是因为它引入了多层非线性变换，在隐藏层中可以提取更复杂的特征表示，并且通过输出层进行组合和决策，从而实现对 XOR 问题更加灵活和准确的处理。\"\n}",
                    "role": "assistant",
                    "function_call": null,
                    "tool_calls": null
                }
            }
        ],
        "created": 1710736943,
        "model": "gpt-3.5-turbo-1106",
        "object": "chat.completion",
        "system_fingerprint": "fp_4aaaf0dc94",
        "usage": {
            "completion_tokens": 1310,
            "prompt_tokens": 5071,
            "total_tokens": 6381
        },
        "parameters": {
            "model": "gpt-3.5-turbo-1106",
            "temperature": 0.2,
            "frequency_penalty": 0.15,
            "presence_penalty": 0.15
        }
    }
]