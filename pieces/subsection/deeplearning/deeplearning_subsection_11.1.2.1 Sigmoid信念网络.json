[
    {
        "strategy": "subsection",
        "source": "deeplearning",
        "title": "11.1.2.1 Sigmoid信念网络",
        "content_length": 1076,
        "content": "Title: 11.1.2.1 Sigmoid信念网络\nContent:\n为了减少模型参数, 可以使用参数化模型来建模有向图模型中的条件概率分布.一种简单的参数化模型为 Sigmoid 信念网络 [Neal, 1992].\n\nSigmoid 信念网络 (Sigmoid Belief Network, SBN ) 中的变量取值为 $\\{0,1\\}$.对于变量 $X_{k}$ 和它的父节点集合 $\\pi_{k}$, 其条件概率分布表示为\n\n\n\\begin{equation*}\np\\left(x_{k}=1 \\mid \\boldsymbol{x}_{\\pi_{k}} ; \\theta\\right)=\\sigma\\left(\\theta_{0}+\\sum_{x_{i} \\in \\boldsymbol{x}_{\\pi_{k}}} \\theta_{i} x_{i}\\right) \\tag{11.10}\n\\end{equation*}\n\n\n其中 $\\sigma(\\cdot)$ 是 Logistic 函数, $\\theta_{i}$ 是可学习的参数. 假设变量 $X_{k}$ 的父节点数量为 $M$,如果使用表格来记录条件概率需要 $2^{M}$ 个参数, 如果使用参数化模型只需要 $M+$ 1 个参数. 如果对不同的变量的条件概率都共享使用一个参数化模型, 其参数数量又可以大幅减少.\n\n值得一提的是, Sigmoid 信念网络与 Logistic 回归模型都采用 Logistic 函数来计算条件概率. 如果假设 Sigmoid 信念网络中只有一个叶子节点, 其所有的父节点之间没有连接, 且取值为实数, 那么 Sigmoid 信念网络的网络结构和 Logistic 回归模型类似, 如图11.4所示. 但是, 这两个模型的区别在于, Logistic 回归模型中的 $\\boldsymbol{x}$ 作为一种确定性的参数, 而非变量. 因此, Logistic 回归模型只建模条件概率 $p(y \\mid \\boldsymbol{x})$, 是一种判别模型; 而 Sigmoid 信念网络建模联合概率 $p(\\boldsymbol{x}, y)$, 是一更复杂的深度信念网络,参见第12.3节.\n\nLogistic 回归模型也经常被看作一种条件无向图模型.种生成模型.\n\n\n\n(a) 只有一层的简单 Sigmoid 信念网络\n\n\n\n(b) Logistic 回归模型\n\n图 11.4 Sigmoid 信念网络和 Logistic 回归模型的比较"
    },
    {
        "id": "chatcmpl-944yf5UWJIqFJiJIEXP2XgFdrcEZd",
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "logprobs": null,
                "message": {
                    "content": "{\n    \"问题1\": \"Sigmoid 信念网络中的条件概率分布是如何表示的？\",\n    \"回答1\": \"Sigmoid 信念网络中的条件概率分布表示为 $p\\big(x_{k}=1 \\big| \\boldsymbol{x}_{\\boldsymbol{\\text{π}}_{k}} ; \\theta\\big)=\\text{σ}\\big(\\theta_{0}+\\text{∑}_{x_{i} \\text{在} \\boldsymbol{x}_{\\boldsymbol{\\text{π}}_{k}}} \\theta_{i} x_{i}\\big)$，其中 $\\text{σ}(\\text{·})$ 是 Logistic 函数，$\\theta_{i}$ 是可学习的参数。\",\n    \"问题2\": \"Sigmoid 信念网络中的参数化模型相比使用表格记录条件概率有什么优势？\",\n    \"回答2\": \"Sigmoid 信念网络中的参数化模型相比使用表格记录条件概率的优势在于，如果对不同的变量的条件概率都共享使用一个参数化模型，其参数数量可以大幅减少。使用参数化模型只需要 $M+1$ 个参数，而使用表格记录条件概率需要 $2^{M}$ 个参数。\",\n    \"问题3\": \"Sigmoid 信念网络与 Logistic 回归模型采用了相似的计算条件概率的方法，它们之间的主要区别是什么？\",\n    \"回答3\": \"Sigmoid 信念网络与 Logistic 回归模型采用 Logistic 函数来计算条件概率。它们之间的主要区别在于，Logistic 回归模型中的 $\\boldsymbol{x}$ 作为一种确定性的参数，而非变量。因此，Logistic 回归模型只建模条件概率 $p(y \\big| \\boldsymbol{x})$，是一种判别模型；而 Sigmoid 信念网络建模联合概率 $p(\\boldsymbol{x}, y)$，是一更复杂的深度信念网络。\",\n    \"问题4\": \"Sigmoid 信念网络和 Logistic 回归模型在图结构上有何异同？\",\n    \"回答4\": \"Sigmoid 信念网络和 Logistic 回归模型在图结构上的异同在于，如果假设 Sigmoid 信念网络中只有一个叶子节点，其所有的父节点之间没有连接，且取值为实数，那么 Sigmoid 信念网络的网络结构和 Logistic 回归模型类似。但是，这两个模型的区别在于，Logistic 回归模型中的 $\\boldsymbol{x}$ 作为一种确定性的参数，而非变量。\",\n    \"问题5\": \"Sigmoid 信念网络和 Logistic 回归模型分别属于什么类型的模型？\",\n    \"回答5\": \"Sigmoid 信念网络属于深度信念网络，建模联合概率 $p(\\boldsymbol{x}, y)$；而 Logistic 回归模型属于判别模型，只建模条件概率 $p(y \\big| \\boldsymbol{x})。\",\n    \"问题6\": \"Sigmoid 信念网络中变量取值为什么限定为 $\\big\\brace{0,1\\big}$？\",\n    \"回答6\": \"Sigmoid 信念网络中变量取值限定为 $\\big\\brace{0,1\\big}$ 是因为它采用了 Logistic 函数来计算条件概率分布，并且适用于二元分类问题。这种限定可以简化建模过程，并且适用于许多实际应用场景。\",\n    \"问题7\": \"Sigmoid 信念网络中参数数量如何随着父节点数量变化？\",\n    \"回答7\": \"Sigmoid 信念网络中如果使用表格来记录条件概率需要 $2^{M}$ 个参数，其中 $M$ 是变量 $X_{k}$ 的父节点数量；而使用参数化模型只需要 $M+1$ 个参数。因此，随着父节点数量的增加，使用参数化模型能够大幅减少参数数量。\",\n    \"问题8\": \"Sigmoid 信念网络和 Logistic 回归模型分别适用于什么类型的任务？\",\n    \"回答8\": \"Sigmoid 信念网络适用于建模联合概率 $p(\\boldsymbol{x}, y)$ 的复杂深度学习任务；而 Logistic 回归模型适用于判别建模任务，即建模条件概率 $p(y \\big| \\boldsymbol{x})$。它们分别适用于不同类型的学习和推断任务。\",\n    \"问题9\": \"Sigmoid 信念网络和 Logistic 回归模型在神经网络领域有何应用？\",\n    \"回答9\": \"Sigmoid 信念网络和 Logistic 回归模型在神经网络领域都被广泛应用。Sigmoid 信念网络作为深度学习领域中重要的一部分，在复杂深度学习任务中发挥着重要作用；而 Logistic 回归模型则常用于分类和预测等判别建模任务。\",\n    \"问题10\": \"Sigmoid 信念网络和 Logistic 回归模型之间存在怎样的联系？\",\n    \"回答10\": \"Sigmoid 信念网络和 Logistic 回归模型之间存在联系在于它们都采用了 Logistic 函数来计算条件概率分布。此外，在特定情况下，Sigmoid 信念网络的结构可以类似于 Logistic 回归模型。然而，在任务和应用场景上，它们有着明显的区别和适用范围。\"\n}",
                    "role": "assistant",
                    "function_call": null,
                    "tool_calls": null
                }
            }
        ],
        "created": 1710759473,
        "model": "gpt-3.5-turbo-1106",
        "object": "chat.completion",
        "system_fingerprint": "fp_4aaaf0dc94",
        "usage": {
            "completion_tokens": 1526,
            "prompt_tokens": 3231,
            "total_tokens": 4757
        },
        "parameters": {
            "model": "gpt-3.5-turbo-1106",
            "temperature": 0.2,
            "frequency_penalty": 0.15,
            "presence_penalty": 0.15
        }
    }
]