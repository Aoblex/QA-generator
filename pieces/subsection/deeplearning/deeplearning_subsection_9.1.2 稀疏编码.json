[
    {
        "strategy": "subsection",
        "source": "deeplearning",
        "title": "9.1.2 稀疏编码",
        "content_length": 2615,
        "content": "Title: 9.1.2 稀疏编码\nContent:\n稀疏编码 ( Sparse Coding ) 也是一种受哺乳动物视觉系统中简单细胞感受野而启发的模型. 在哺乳动物的初级视觉皮层 (Primary Visual Cortex) 中, 每个神经元仅对处于其感受野中特定的刺激信号 (比如特定方向的边缘、条纹等特征）做出响应. 局部感受野可以被描述为具有空间局部性、方向性和带通性 [Olshausen et al., 1996]. 也就是说, 外界信息经过编码后仅有一小部分神经元激活, 即外界刺激在视觉神经系统的表示具有很高的稀疏性. 编码的稀疏性在一定程度上符合生物学的低功耗特性.\n\n在数学上, (线性) 编码是指给定一组基向量 $\\boldsymbol{A}=\\left[\\boldsymbol{a}_{1}, \\cdots, \\boldsymbol{a}_{M}\\right]$, 将输入样本 $x \\in \\mathbb{R}^{D}$ 表示为这些基向量的线性组合\n\n\n\\begin{align*}\n\\boldsymbol{x} & =\\sum_{m=1}^{M} z_{m} \\boldsymbol{a}_{m}  \\tag{9.9}\\\\\n& =\\boldsymbol{A z} \\tag{9.10}\n\\end{align*}\n\n\n其中基向量的系数 $\\boldsymbol{z}=\\left[z_{1}, \\cdots, z_{M}\\right]$ 称为输入样本 $\\boldsymbol{x}$ 的编码（Encoding）, 基向量 $\\boldsymbol{A}$ 也称为字典 (Dictionary).\n\n编码是对 $D$ 维空间中的样本 $\\boldsymbol{x}$ 找到其在 $P$ 维空间中的表示 (或投影), 其目标通常是编码的各个维度都是统计独立的, 并且可以重构出输入样本. 编码的关键是找到一组 “完备”的基向量 $\\boldsymbol{A}$, 比如主成分分析等. 但是主成分分析得到的编码通常是稠密向量,没有稀疏性.\n\n\\section*{数学小知识 1 完备性}\n如果 $M$ 个基向量刚好可以支撑 $M$ 维的欧氏空间, 则这 $M$ 个基向量是完备的. 如果 $M$ 个基向量可以支撑 $D$ 维的欧氏空间, 并且 $M>D$, 则这 $M$ 个基向量是过完备的 ( overcomplete )、㔯余的.\n\n“过完备”基向量是指基向量个数远远大于其支撑空间维度. 因此这些基向量一般不具备独立、正交等性质.\n\n为了得到稀疏的编码, 我们需要找到一组 “过完备” 的基向量（即 $M>D$ )来进行编码. 在过完备基向量之间往往会存在一些冗余性, 因此对于一个输入样本, 会存在很多有效的编码. 如果加上稀疏性限制, 就可以减少解空间的大小, 得到“唯一”的稀疏编码.\n\n给定一组 $N$ 个输入向量 $\\boldsymbol{x}^{(1)}, \\cdots, \\boldsymbol{x}^{(N)}$, 其稀疏编码的目标函数定义为\n\n\n\\begin{equation*}\n\\mathcal{L}(\\boldsymbol{A}, \\boldsymbol{Z})=\\sum_{n=1}^{N}\\left(\\left\\|\\boldsymbol{x}^{(n)}-A \\boldsymbol{z}^{(n)}\\right\\|^{2}+\\eta \\rho\\left(\\boldsymbol{z}^{(n)}\\right)\\right) \\tag{9.11}\n\\end{equation*}\n\n\\footnotetext{\\href{https://nndl.github.io/}{https://nndl.github.io/}\n}\n\n带通性是指不同尺度下空间结构的敏感性。比如, 带通滤波器 (Bandpass Filter)是指容许某个频率范围的信号通过，同时屏蔽其他频段的设备.\\\\\n其中 $\\boldsymbol{Z}=\\left[\\boldsymbol{z}^{(1)}, \\cdots, \\boldsymbol{z}^{(N)}\\right], \\rho(\\cdot)$ 是一个稀疏性衡量函数, $\\eta$ 是一个超参数, 用来控制稀疏性的强度.\n\n对于一个向量 $\\boldsymbol{z} \\in \\mathbb{R}^{M}$, 其稀疏性定义为非零元素的比例. 如果一个向量只有很少的几个非零元素, 就说这个向量是稀疏的. 稀疏性衡量函数 $\\rho(\\boldsymbol{z})$ 是给向量 $\\boldsymbol{z}$ 一个标量分数. $\\boldsymbol{z}$ 越稀疏, $\\rho(\\boldsymbol{z})$ 越小.\n\n稀疏性衡量函数有多种选择, 最直接的衡量向量 $\\boldsymbol{z}$ 稀疏性的函数是 $\\ell_{0}$ 范数\n\n\n\\begin{equation*}\n\\rho(\\boldsymbol{z})=\\sum_{m=1}^{M} \\mathbf{I}\\left(\\left|z_{m}\\right|>0\\right) \\tag{9.12}\n\\end{equation*}\n\n\n但 $\\ell_{0}$ 范数不满足连续可导, 因此很难进行优化. 在实际中, 稀疏性衡量函数通常使用 $e_{1}$ 范数\n\n\n\\begin{equation*}\n\\rho(\\boldsymbol{z})=\\sum_{m=1}^{M}\\left|z_{m}\\right| \\tag{9.13}\n\\end{equation*}\n\n\n或对数函数\n\n\n\\begin{equation*}\n\\rho(\\boldsymbol{z})=\\sum_{m=1}^{M} \\log \\left(1+z_{m}^{2}\\right) \\tag{9.14}\n\\end{equation*}\n\n\n或指数函数\n\n参见习题9-6.\n\n\n\\begin{equation*}\n\\rho(\\boldsymbol{z})=\\sum_{m=1}^{M}-\\exp \\left(-z_{m}^{2}\\right) \\tag{9.15}\n\\end{equation*}"
    },
    {
        "id": "chatcmpl-944awSQyi5dMMBzmG3lseaqYRxp6a",
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "logprobs": null,
                "message": {
                    "content": "{\n    \"问题1\": \"稀疏编码与哺乳动物视觉系统中的简单细胞感受野有何联系？\",\n    \"回答1\": \"稀疏编码是受哺乳动物视觉系统中简单细胞感受野启发的模型。在哺乳动物的初级视觉皮层中，每个神经元仅对处于其感受野中特定的刺激信号做出响应。这种局部感受野具有空间局部性、方向性和带通性，与稀疏编码中的目标相一致。\",\n    \"问题2\": \"线性编码是如何将输入样本表示为给定一组基向量的线性组合？\",\n    \"回答2\": \"线性编码将输入样本 $\\boldsymbol{x} \\text{（}x \\text{在} \\text{R}^{D}\\text{）}$ 表示为基向量 $\\boldsymbol{A}=\\big[\\boldsymbol{a}_{1}, \\text{...}, \\boldsymbol{a}_{M}\\big]$ 的线性组合，即 $\\boldsymbol{x}=\\boldsymbol{A z}$，其中基向量的系数 $\\boldsymbol{z}=\\big[z_{1}, \\text{...}, z_{M}\\big]$ 称为输入样本 $\\boldsymbol{x}$ 的编码。\",\n    \"问题3\": \"过完备基向量的定义是什么？\",\n    \"回答3\": \"过完备基向量是指基向量个数远远大于其支撑空间维度。如果 $M$ 个基向量可以支撑 $D$ 维的欧氏空间，并且 $M>D$，则这 $M$ 个基向量是过完备的（overcomplete）。这些基向量一般不具备独立、正交等性质。\",\n    \"问题4\": \"为什么需要找到一组“过完备”的基向量来进行编码？\",\n    \"回答4\": \"为了得到稀疏的编码，需要找到一组“过完备”的基向量来进行编码。在过完备基向量之间往往会存在一些冗余性，因此对于一个输入样本，会存在很多有效的编码。通过加上稀疏性限制，可以减少解空间的大小，得到“唯一”的稀疏编码。\",\n    \"问题5\": \"稀疏编码的目标函数是如何定义的？\",\n    \"回答5\": \"给定一组 $N$ 个输入向量 $\\boldsymbol{x}^{(1)}, \\text{...}, \\boldsymbol{x}^{(N)}$，其稀疏编码的目标函数定义为 $\\text{L}(\\boldsymbol{A}, \\boldsymbol{Z})=\\text{∑}_{n=1}^{N}\\big(\\big\\\\|\\boldsymbol{x}^{(n)}-A \\boldsymbol{z}^{(n)}\\big\\\\|^{2}+\\text{η} \\rho\\big(\\boldsymbol{z}^{(n)}\\big)\\big)$，其中 $\\boldsymbol{Z}=\\big[\\boldsymbol{z}^{(1)}, \\text{...}, \\boldsymbol{z}^{(N)}\\big], \\rho(\\bullet)$ 是一个稀疏性衡量函数，$\\text{η}$ 是一个超参数，用来控制稀疏性的强度。\",\n    \"问题6\": \"如何定义稀疏性衡量函数来衡量向量的稀疏性？\",\n    \"回答6\": \"稀疏性衡量函数有多种选择，最直接的衡量向量 $\\boldsymbol{z}$ 稀疏性的函数是 $\\text{ℓ}_{0}$ 范数 $\\rho(\\boldsymbol{z})=\\text{∑}_{m=1}^{M} \\textbf{I}\\big(\\big|z_{m}\\big|>0\\big)$。但 $\\text{ℓ}_{0}$ 范数不满足连续可导，因此在实际中通常使用 $\\text{ℓ}_{1}$ 范数或对数函数或指数函数等形式来代替。\",\n    \"问题7\": \"带通性在稀疏编码中指什么？\",\n    \"回答7\": \"带通性是指不同尺度下空间结构的敏感性。在稀疏编码中，带通性可以理解为对不同尺度或频率范围的信号具有敏感性，类似于带通滤波器容许某个频率范围的信号通过，同时屏蔽其他频段的设备。\",\n    \"问题8\": \"稀疏编码中如何定义稀疏性衡量函数来衡量向量的稀疏性？\",\n    \"回答8\": \"稀疏编码中通常使用 $\\text{ℓ}_{1}$ 范数、对数函数或指数函数等形式来定义稀疏性衡量函数来衡量向量的稀疏性。这些函数能够有效地衡量向量中非零元素的比例，并且在实际优化过程中更易处理。\",\n    \"问题9\": \"为什么在实际中通常使用 $\\text{ℓ}_{1}$ 范数或对数函数或指数函数来代替 $\\text{ℓ}_{0}$ 范数？\",\n    \"回答9\": \"在实际中通常使用 $\\text{ℓ}_{1}$ 范数或对数函数或指数函数等形式来代替 $\\text{ℓ}_{0}$ 范数，因为 $\\text{ℓ}_{0}$ 范数不满足连续可导，难以进行优化。而这些替代形式能够更好地逼近 $\\text{ℓ}_{0}$ 范数，并且在实际优化过程中更易处理。\",\n    \"问题10\": \"为什么需要找到一组“完备”的基向量来进行编码？\",\n    \"回答10\": \"为了得到稀疏的编码，并且能够重构出输入样本，需要找到一组“完备”的基向量。这些“完备”的基向量能够使得编码的各个维度都是统计独立的，并且能够有效地重构出输入样本。\"\n}",
                    "role": "assistant",
                    "function_call": null,
                    "tool_calls": null
                }
            }
        ],
        "created": 1710758002,
        "model": "gpt-3.5-turbo-1106",
        "object": "chat.completion",
        "system_fingerprint": "fp_4aaaf0dc94",
        "usage": {
            "completion_tokens": 1694,
            "prompt_tokens": 4320,
            "total_tokens": 6014
        },
        "parameters": {
            "model": "gpt-3.5-turbo-1106",
            "temperature": 0.2,
            "frequency_penalty": 0.15,
            "presence_penalty": 0.15
        }
    }
]