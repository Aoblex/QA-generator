[
    {
        "strategy": "subsection",
        "source": "deeplearning",
        "title": "7.6.5 神经架构搜索",
        "content_length": 874,
        "content": "Title: 7.6.5 神经架构搜索\nContent:\n上面介绍的超参数优化方法都是在固定 (或变化比较小) 的超参数空间 $\\mathcal{X}$中进行最优配置搜索, 而最重要的神经网络架构一般还是需要由有经验的专家来进行设计.\n\n神经架构搜索 (Neural Architecture Search,NAS ) [Zoph et al., 2017] 是一个新的比较有前景的研究方向, 通过神经网络来自动实现网络架构的设计. 一个神经网络的架构可以用一个变长的字符串来描述. 利用元学习的思想, 神经架构搜索利用一个控制器来生成另一个子网络的架构描述. 控制器可以由一个循环神经网络来实现. 控制器的训练可以通过强化学习来完成, 其奖励信号为生成的子网络在开发集上的准确率.\n\n\\section*{7.7 网络正则化}\n机器学习模型的关键是泛化问题, 即在样本真实分布上的期望风险最小化.而训练数据集上的经验风险最小化和期望风险并不一致. 由于神经网络的拟合从某种角度来讲, 深度学习使得机器学习中的 “特征工程” 问题转变为 “网络架构工程”问题.\n\n强化学习参见\n\n第14.1节。\\\\\n能力非常强, 其在训练数据上的错误率往往都可以降到非常低, 甚至可以到 0 , 从而导致过拟合. 因此, 如何提高神经网络的泛化能力反而成为影响模型能力的最关键因素.\n\n正则化 (Regularization) 是一类通过限制模型复杂度, 从而避免过拟合, 提高泛化能力的方法,比如引入约束、增加先验、提前停止等.\n\n在传统的机器学习中, 提高泛化能力的方法主要是限制模型复杂度, 比如采用 $\\ell_{1}$ 和 $\\ell_{2}$ 正则化等方式. 而在训练深度神经网络时, 特别是在过度参数化 (Over-Parameterization) 时, $\\ell_{1}$ 和 $\\ell_{2}$ 正则化的效果往往不如浅层机器学习模型中显著. 因此训练深度学习模型时, 往往还会使用其他的正则化方法, 比如数据增强、提前停止、丢弃法、集成法等."
    },
    {
        "id": "chatcmpl-944DE4ngmcs84MLFcKm56ZOOBQe29",
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "logprobs": null,
                "message": {
                    "content": "{\n    \"问题1\": \"超参数优化方法与神经架构搜索的主要区别是什么？\",\n    \"回答1\": \"超参数优化方法是在固定（或变化比较小）的超参数空间中进行最优配置搜索，而神经架构搜索是通过神经网络自动实现网络架构的设计，利用元学习的思想，利用一个控制器来生成另一个子网络的架构描述。\",\n    \"问题2\": \"神经架构搜索如何实现对网络架构的设计？\",\n    \"回答2\": \"神经架构搜索利用一个控制器来生成另一个子网络的架构描述，控制器可以由一个循环神经网络来实现。控制器的训练可以通过强化学习来完成，其奖励信号为生成的子网络在开发集上的准确率。\",\n    \"问题3\": \"机器学习模型的关键问题是什么？\",\n    \"回答3\": \"机器学习模型的关键问题是泛化问题，即在样本真实分布上的期望风险最小化。而训练数据集上的经验风险最小化和期望风险并不一致。\",\n    \"问题4\": \"深度学习中的 “特征工程” 问题转变为了什么问题？\",\n    \"回答4\": \"深度学习使得机器学习中的 “特征工程” 问题转变为 “网络架构工程”问题。这意味着在深度学习中，设计合适的网络架构成为了关键。\",\n    \"问题5\": \"为什么在训练深度学习模型时往往需要使用其他正则化方法？\",\n    \"回答5\": \"在训练深度学习模型时，特别是在过度参数化时，$\\text{\\text{L}}_{1}$ 和 $\\text{\\text{L}}_{2}$ 正则化的效果往往不如浅层机器学习模型中显著。因此，往往需要使用其他正则化方法，比如数据增强、提前停止、丢弃法、集成法等。\",\n    \"问题6\": \"传统机器学习中提高泛化能力的方法主要是通过什么途径？\",\n    \"回答6\": \"在传统的机器学习中，提高泛化能力的方法主要是通过限制模型复杂度，比如采用 $\\text{\\text{L}}_{1}$ 和 $\\text{\\text{L}}_{2}$ 正则化等方式。\",\n    \"问题7\": \"正则化是如何提高模型泛化能力的？\",\n    \"回答7\": \"正则化是通过限制模型复杂度、增加先验、提前停止等方式来避免过拟合，从而提高模型的泛化能力。\",\n    \"问题8\": \"神经架构搜索中控制器的训练如何完成？\",\n    \"回答8\": \"神经架构搜索中控制器的训练可以通过强化学习来完成，其奖励信号为生成的子网络在开发集上的准确率。\",\n    \"问题9\": \"为什么深度学习使得机器学习中的 “特征工程” 问题转变为了 “网络架构工程”问题？\",\n    \"回答9\": \"深度学习使得机器学习中的 “特征工程” 问题转变为 “网络架构工程”问题，因为在深度学习中，设计合适的网络架构成为了关键。深度学习模型需要更加复杂和灵活的网络结构来表达和学习数据特征。\",\n    \"问题10\": \"在训练深度学习模型时，为什么 $\\text{\\text{L}}_{1}$ 和 $\\text{\\text{L}}_{2}$ 正则化效果不如浅层机器学习模型中显著？\",\n    \"回答10\": \"$\\text{\\text{L}}_{1}$ 和 $\\text{\\text{L}}_{2}$ 正则化效果不如浅层机器学习模型中显著是因为在过度参数化时，深度学习模型具有更加复杂和灵活的网络结构，导致传统正则化方法效果减弱。因此，在训练深度学习模型时需要使用其他正则化方法来提高泛化能力。\"\n}",
                    "role": "assistant",
                    "function_call": null,
                    "tool_calls": null
                }
            }
        ],
        "created": 1710756532,
        "model": "gpt-3.5-turbo-1106",
        "object": "chat.completion",
        "system_fingerprint": "fp_4aaaf0dc94",
        "usage": {
            "completion_tokens": 1258,
            "prompt_tokens": 3329,
            "total_tokens": 4587
        },
        "parameters": {
            "model": "gpt-3.5-turbo-1106",
            "temperature": 0.2,
            "frequency_penalty": 0.15,
            "presence_penalty": 0.15
        }
    }
]